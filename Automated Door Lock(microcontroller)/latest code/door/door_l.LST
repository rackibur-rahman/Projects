C51 COMPILER V8.05a   DOOR_L                                                               01/14/2018 02:40:24 PAGE 1   


C51 COMPILER V8.05a, COMPILATION OF MODULE DOOR_L
OBJECT MODULE PLACED IN door_l.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE door_l.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          // Password based Door lock 
   2          // modifying userID and Password
   3          #include<reg51.h>
   4          sfr ROW=0x80;   //assigning PORT-0 to read rows
   5          sfr COL=0xA0;   //assigning PORT-2 to read colomns
   6          sfr ldata=0x90; //assigning PORT-1 for LCD data
   7          sbit rs=P3^0;
   8          sbit rw=P3^1;
   9          sbit en=P3^2;
  10          sbit busy=P1^7;
  11          sbit servo=P3^3;          //Output to motor
  12          void lcdcmd(unsigned char value) ;
  13          void lcddata(unsigned char value);
  14          void lcdready(void)        ;
  15          void printstring(unsigned char ch[]) ;
  16          void LCDclear(void);
  17          void msdelay(unsigned int value)  ;
  18          int keypad();
  19          void timer(unsigned int msec);
  20          void door_open(void);
  21          
  22          void door_close(void);
  23          unsigned char userID[5]={"0227"};
  24          unsigned char password[5]={"0070"};
  25          unsigned char update_1[5]={"0000"};
  26           unsigned char update_2[5]={"0000"};
  27           unsigned char x;
  28          void main(void)
  29          { 
  30   1       unsigned int i,k;
  31   1       
  32   1       
  33   1        lcdcmd(0x38);
  34   1        lcdcmd(0x0F);
  35   1        lcdcmd(0x06);
  36   1        lcdcmd(0x01);
  37   1        //while(1){
  38   1        LCDclear();
  39   1        lcdcmd(0x80);
  40   1        while(1)
  41   1        {
  42   2        printstring("userID:");
  43   2        lcdcmd(0x87);
  44   2        
  45   2         i=0;
  46   2        do
  47   2        {
  48   3         update_1[i]=keypad();
  49   3         lcddata(update_1[i]);
  50   3         i++;
  51   3         }while(i!=4);
  52   2         i=0;
  53   2         if(update_1[0]==userID[0] && update_1[1]==userID[1] && update_1[2]==userID[2] && update_1[3]==userID[3]
             - )
  54   2         {
C51 COMPILER V8.05a   DOOR_L                                                               01/14/2018 02:40:24 PAGE 2   

  55   3                       lcdcmd(0xC0);
  56   3                       printstring("password:");
  57   3                       lcdcmd(0xC9);
  58   3        
  59   3                       do
  60   3                       {
  61   4                               update_1[i]=keypad();
  62   4                               i++;
  63   4                               lcddata('*');
  64   4                       }while(i!=4);
  65   3                        if(update_1[0]==password[0] && update_1[1]==password[1] && update_1[2]==password[2] && update_1[3]==pa
             -ssword[3] )
  66   3                         {
  67   4                         LCDclear();
  68   4                         printstring("Authenticated");
  69   4                         msdelay(2000);
  70   4                         LCDclear();
  71   4                         lcdcmd(0x80);
  72   4                         printstring("1.Unlock Door");
  73   4                         lcdcmd(0xC0);
  74   4                         printstring("2.lock Door");
  75   4      
  76   4                         do
  77   4                         {
  78   5                          k=keypad();
  79   5                              }while(k!='1' && k!='2' && k!='C');
  80   4                          switch(k)
  81   4                              {
  82   5                               case '1' :while(1)
  83   5                                                       { 
  84   6                                                       door_open();
  85   6                                                      if('2'==keypad())
  86   6                                                         door_close();
  87   6                                                      if('C' ==keypad())
  88   6                                                              {
  89   7                                                                      main();
*** WARNING C265 IN LINE 89 OF DOOR_L.C: 'main': recursive call to non-reentrant function
  90   7                                                              }       
  91   6                                                      }
  92   5                                                      break;
  93   5                              case '2' :      while(1)
  94   5                                                      {
  95   6                                                       door_close();
  96   6                                                       if('1'==keypad())
  97   6                                                       door_open();
  98   6                                                      if('C' ==keypad())
  99   6                                                       {
 100   7                                                              main();
*** WARNING C265 IN LINE 100 OF DOOR_L.C: 'main': recursive call to non-reentrant function
 101   7                                                      }
 102   6                                                      }
 103   5                                                      break;
 104   5                              case 'C' : main();
*** WARNING C265 IN LINE 104 OF DOOR_L.C: 'main': recursive call to non-reentrant function
 105   5                                                      break;
 106   5                              default  :main();
*** WARNING C265 IN LINE 106 OF DOOR_L.C: 'main': recursive call to non-reentrant function
 107   5                                                break;
 108   5                              }
 109   4                         }
 110   3      
 111   3                         else
C51 COMPILER V8.05a   DOOR_L                                                               01/14/2018 02:40:24 PAGE 3   

 112   3                         {
 113   4                         LCDclear();
 114   4                         printstring("Access Denide");
 115   4                         msdelay(1000);
 116   4                         LCDclear();
 117   4                        
 118   4                         main();
*** WARNING C265 IN LINE 118 OF DOOR_L.C: 'main': recursive call to non-reentrant function
 119   4                         }
 120   3              
 121   3       }
 122   2       else
 123   2       {
 124   3        LCDclear();
 125   3        printstring("Invalid UserID");
 126   3        msdelay(1000);
 127   3        main();                  
*** WARNING C265 IN LINE 127 OF DOOR_L.C: 'main': recursive call to non-reentrant function
 128   3       }
 129   2       }
 130   1       }
 131           /* sending commands to  LCD display to act in command mode */ 
 132          void lcdcmd(unsigned char value)
 133          {
 134   1       lcdready();
 135   1       ldata=value;
 136   1       rs=0;
 137   1       rw=0;
 138   1       en=1;
 139   1       msdelay(10);
 140   1       en=0;
 141   1       }
 142           /* sending commnad to LCD to display characters*/
 143          void lcddata(unsigned char value)
 144          {
 145   1       lcdready();
 146   1       ldata=value;
 147   1       rs=1;
 148   1       rw=0;
 149   1       en=1;
 150   1       msdelay(10);
 151   1       en=0;
 152   1       }
 153           /* checking LCD buffer for free */
 154          void lcdready(void)
 155          {
 156   1       busy=1;
 157   1       rs=0;
 158   1       rw=1;
 159   1       if(busy==1)
 160   1        {
 161   2         en=0;
 162   2         msdelay(1);
 163   2         en=1;
 164   2         }
 165   1      }
 166          
 167          void printstring(unsigned char ch[])
 168          {
 169   1       unsigned int i;
 170   1       for(i=0;ch[i]!='\0';i++)
 171   1       lcddata(ch[i]);
C51 COMPILER V8.05a   DOOR_L                                                               01/14/2018 02:40:24 PAGE 4   

 172   1       }
 173          /* generating delay*/
 174          void msdelay(unsigned int value)
 175          {
 176   1       unsigned int i,j;
 177   1       for(i=0;i<value;i++)
 178   1       for(j=0;j<100;j++);
 179   1       }
 180          void LCDclear(void)
 181           {
 182   1        lcdcmd(0x01);
 183   1        }
 184          int keypad() 
 185           {
 186   1         unsigned char dat[4][4]={'7','8','9','%',     // assigning key matrix
 187   1                                '4','5','6','*',
 188   1                                                         '1','2','3','-',
 189   1                                                         'C','0','=','+'};
 190   1       unsigned char colloc,rowloc;
 191   1       COL=0xFF;
 192   1       ROW=0x00;
 193   1       rs=0;
 194   1       rw=0;
 195   1       en=0;
 196   1       busy=0;
 197   1       /* setting LCD screen*/ 
 198   1       ldata=0x00;
 199   1       lcdcmd(0x38);
 200   1       lcdcmd(0x0E);
 201   1        lcdcmd(0x06);
 202   1      
 203   1       while(1)
 204   1       {
 205   2      /* reading character from keyboard */
 206   2         do
 207   2         {
 208   3          ROW=0x00;
 209   3              colloc=COL;
 210   3              colloc&=0x0F;
 211   3              }while(colloc!=0x0F);
 212   2              do
 213   2              {
 214   3               do
 215   3               {
 216   4                msdelay(25);
 217   4                colloc=COL;
 218   4                colloc&=0x0F;
 219   4                }while(colloc==0x0F);
 220   3                msdelay(25);
 221   3                colloc=COL;
 222   3                colloc&=0x0F;
 223   3                }while(colloc==0x0F);
 224   2          while(1)
 225   2              {
 226   3               ROW=0xFE;
 227   3               colloc=COL;
 228   3               colloc&=0x0F;
 229   3               if(colloc!=0x0F)
 230   3               { 
 231   4                rowloc=0;
 232   4                break;
 233   4                }
C51 COMPILER V8.05a   DOOR_L                                                               01/14/2018 02:40:24 PAGE 5   

 234   3                ROW=0xFD;
 235   3                colloc=COL;
 236   3                colloc&=0x0F;
 237   3                 if(colloc!=0x0F)
 238   3                 {
 239   4                  rowloc=1;
 240   4                      break;
 241   4                      }
 242   3                ROW=0xFB;
 243   3                colloc=COL;
 244   3                colloc&=0x0F;
 245   3                 if(colloc!=0x0F)
 246   3                 {
 247   4                  rowloc=2;
 248   4                      break;
 249   4                      }
 250   3                ROW=0xF7;
 251   3                colloc=COL;
 252   3                colloc&=0x0F;
 253   3              if(colloc!=0x0F)
 254   3                {  
 255   4                    rowloc=3;
 256   4                    break;
 257   4                  }
 258   3                 }
 259   2         if(colloc==0x0E)
 260   2         return(dat[rowloc][0]);
 261   2         else if(colloc==0x0D)
 262   2         return(dat[rowloc][1]);
 263   2         else if(colloc==0x0B)
 264   2         return(dat[rowloc][2]);
 265   2         else
 266   2          return(dat[rowloc][3]);
 267   2              }
 268   1              }
 269           void timer(unsigned int msec)     // Function for timer
 270          {
 271   1      unsigned int i;
 272   1      for(i=0;i<msec;i++)
 273   1      {
 274   2      TMOD=0x20;         // Mode2
 275   2      TH1=0xD1;
 276   2      TL1=0xFF;
 277   2      
 278   2      TR1=1;
 279   2      while(TF1==0);
 280   2      TF1=0;
 281   2      TR1=0;
 282   2      }
 283   1      }
 284          
 285          void door_open()
 286          {
 287   1       unsigned int i;
 288   1      servo=0;
 289   1      //anticlockwise direction
 290   1                      for(i=0;i<1;i++)
 291   1                      {
 292   2                              servo=1;
 293   2                              timer(10);
 294   2                              servo=0;
 295   2                              timer(380);
C51 COMPILER V8.05a   DOOR_L                                                               01/14/2018 02:40:24 PAGE 6   

 296   2                      }
 297   1      }
 298          void door_close()
 299          {
 300   1       unsigned int i;
 301   1      servo=0;
 302   1      //clockwise direction
 303   1                      for(i=0;i<1;i++)
 304   1                      {
 305   2                              servo=1;
 306   2                              timer(60);
 307   2                              servo=0;
 308   2                              timer(340);
 309   2                      }
 310   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    868    ----
   CONSTANT SIZE    =    103    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     21      26
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  6 WARNING(S),  0 ERROR(S)
